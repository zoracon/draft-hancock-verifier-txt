



Network Working Group                                         A. Hancock
Internet-Draft                            Electronic Frontier Foundation
Intended status: Informational                          8 September 2025
Expires: 12 March 2026


            A File Format to Assist Verifier Accountability
                   draft-hancock-verifier-txt-latest

Abstract

   This document proposes a standard file format, verifier.txt, for
   digital identity verifiers to declare themselves, purpose for
   verification, data handling policies, and commitment to privacy-
   preserving practices.  Inspired by robots.txt and security.txt, this
   file aims to provide transparency and establish a baseline of trust
   for individuals presenting digital credentials and for wallet
   applications or browsers mediating these interactions.  The goal is
   to address concerns regarding verifier abuse in the digital ID
   landscape.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 12 March 2026.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  The verifier.txt File Format
   4.  Required Fields
   5.  Optional Fields
   6.  Placement and Access
   7.  Processing Rules
   8.  Security Considerations
   9.  Privacy Considerations
   10. IANA Considerations
   Acknowledgments
   Author's Address

1.  Introduction

   The increasing adoption of digital identification, such as Mobile
   Driver's Licenses (mDLs), presents significant privacy and equity
   challenges.  Verifiers (relying parties) can request personal
   information without clear policies on what data is collected, how
   it's stored, or if it's shared, leading to potential surveillance and
   misuse.

   To foster trust and accountability, mechanisms are needed to ensure
   verifiers clearly communicate their practices.  This RFC proposes
   verifier.txt as a machine-readable and human-readable standard that
   digital identity verifiers can publish to make their policies
   explicit, enabling informed consent from users and facilitating
   automated checks by wallet applications and browsers.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119.

   *  Verifier: An entity (e.g., website, application, physical
      establishment) that requests and verifies digital identity
      credentials from a Holder

   *  Holder: An individual who possesses and presents a digital
      identity credential

   *  Issuer: An entity (e.g., government agency, employer) that issues
      digital identity credentials

   *  Digital ID: A digital representation of an identity credential,
      such as an mDL or JWT

   *  Selective Disclosure (SD): The ability for a Holder to choose
      which specific pieces of information from a credential to reveal
      to a Verifier

   *  Zero-Knowledge Proof (ZKP): A cryptographic method allowing a
      Holder to prove possession of an attribute (e.g., "age over 18")
      without revealing any other information, including the exact
      attribute value (e.g., date of birth)

   *  Unlinkability: The property that prevents a Verifier from linking
      multiple presentations from the same Holder, and ideally prevents
      collusion between Issuers and Verifiers from tracking a Holder
      across sessions.

3.  The verifier.txt File Format

   The verifier.txt file is a plain text file encoded in UTF-8,
   consisting of "Field: Value" pairs, with each pair on a new line.
   Comments can be indicated by a hash symbol (#) at the beginning of a
   line.  Fields are case-insensitive.

4.  Required Fields

   The following fields MUST be present in a verifier.txt file:

   Verifier-Name

   Value: The official, legal name of the Verifier entity - Example:
   Verifier-Name: Example Retail Inc.

   Contact

   Value: An email address or URL for inquiries, support, and abuse
   reporting.  This should be actively monitored. - Example: Contact:
   mailto:privacy@example.com or Contact: https://example.com/privacy-
   inquiries

   Purpose-of-Verification

   Value: A clear and concise statement describing the explicit purpose
   for requesting digital ID information.  This helps prevent "mission
   creep" and ensures transparency about why data is needed - Examples:
   - Purpose-of-Verification: To verify age for access to adult content.
   - Purpose-of-Verification: To confirm identity for account creation
   and legal compliance.  - Purpose-of-Verification: To verify
   eligibility for employer-provided benefits.

   Requested-Attributes

   Value: A comma-separated list of the specific attributes the Verifier
   may request.  Each attribute SHOULD be accompanied by a notation
   indicating whether it is requested via Selective Disclosure (SD),
   Zero-Knowledge Proof (ZKP), or as a Full-Disclosure (FD) value (plain
   text).

   *  Examples:

   *  Requested-Attributes: age_over_21 (ZKP), family_name (SD),
      email_domain (SD), driving_privileges (FD)

   *  Requested-Attributes: age_over_18 (ZKP)

   Data-Retention-Policy

   Value: A URL linking to the Verifier's comprehensive data retention
   policy, or a brief summary of how long collected data is kept and for
   what purpose.  This addresses the concern that verifiers might store
   collected information indefinitely - Example: Data-Retention-Policy:
   https://example.com/privacy#data-retention - Summary Example: Data-
   Retention-Policy: Age verification logs retained for 90 days for
   audit purposes.  No explicit personal identifiers stored.

   Data-Sharing-Policy

   Value: A URL linking to the Verifier's comprehensive data sharing
   policy, or a brief summary of whether and how collected data is
   shared with third parties (e.g., data brokers, other businesses,
   government agencies).  This directly confronts the risk of data
   pooling and sale of user dossiers - Example: Data-Sharing-Policy:
   https://example.com/privacy#data-sharing - Summary Example: Data-
   Sharing-Policy: No personal information shared with third parties for
   marketing.  Required data may be shared with regulatory bodies for
   compliance audits.

   Unlinkability-Support

   Value: A statement declaring the Verifier's commitment to supporting
   and enforcing unlinkable presentations, explicitly stating that
   presentations will not be used to track users across sessions or
   collude with Issuers. - This is critical for preventing pervasive
   tracking - Example: Unlinkability-Support: This verifier supports
   unlinkable presentations and will not attempt to link user sessions.

   Abuse-Reporting-Mechanism

   Value: A URL or email address specifically dedicated to reporting
   misuse or abuse of digital ID requests by the Verifier - Example:
   Abuse-Reporting-Mechanism: mailto:abuse@example.com

5.  Optional Fields

   The following fields are OPTIONAL but RECOMMENDED:

   Verifier-ID-Registry Value: A URL pointing to the Verifier's entry in
   a recognized Verifier Registry if their jurisdiction mandated a
   registry. - Example: Verifier-ID-Registry: https://verifier-
   registry.example.org/id/example-retail

   Auditing-Policy

   Value: A URL to details about any independent audits performed on the
   Verifier's data handling and privacy compliance. - Example: Auditing-
   Policy: https://example.com/security#audits

   Privacy-Preserving-Methods

   Value: A comma-separated list of specific privacy-enhancing
   technologies (e.g., ZKP systems, homomorphic encryption) used in the
   verification process - Example: Privacy-Preserving-Methods: Groth16
   ZKPs, Pedersen Commitments

   Data-Minimization-Statement

   Value: A statement asserting the Verifier's commitment to the
   principle of data minimization, collecting only the minimum necessary
   information required for the stated purpose - Example: Data-
   Minimization-Statement: We adhere strictly to data minimization
   principles, requesting only essential attributes.

   Consent-Mechanism

   Value: A description or URL detailing how user consent for data
   presentation and processing is obtained and managed. - Example:
   Consent-Mechanism: Explicit user consent obtained via in-app prompt
   and digital wallet interface before data presentation.

6.  Placement and Access

   The verifier.txt file MUST be placed in the / (root) directory of the
   Verifier's web server.  It SHOULD also be accessible via the .well-
   known URI for greater discoverability, e.g.,
   https://example.com/.well-known/verifier.txt.

7.  Processing Rules

   Wallet applications, browsers, and other client-side agents SHOULD
   attempt to retrieve verifier.txt from the domain associated with the
   Verifier.  If the file is found, its declarations SHOULD be presented
   to the user in a clear, understandable manner (e.g., within the
   digital wallet interface) before a credential presentation is
   initiated.  Clients SHOULD flag or prevent interactions with
   Verifiers that fail to provide a verifier.txt file or whose policies
   contradict user preferences or best practices.

8.  Security Considerations

   Authenticity: The authenticity of verifier.txt relies on the security
   of the Verifier's web server.  Compromise of the server could lead to
   a malicious verifier.txt being served.  Future iterations could
   explore digital signing of the verifier.txt file.

   Spoofing: A malicious actor could attempt to spoof a verifier.txt
   file on their own domain to mislead users.  This risk is mitigated by
   tying the verifier.txt to the actual domain of the relying party
   requesting the credential.

   Completeness: While verifier.txt aims for transparency, it cannot
   guarantee that a malicious Verifier will adhere to its stated
   policies.  It serves as a declaration of intent and a basis for
   accountability.

9.  Privacy Considerations

   verifier.txt enhances privacy by providing transparency about
   Verifier practices, allowing users to make informed decisions about
   sharing their data.

   *  It promotes data minimization and unlinkability, directly
      addressing major privacy concerns with digital ID systems

   *  It does not, however, mitigate all privacy risks, such as the
      collection of other observable Personally Identifiable Information
      (PII) like IP addresses, or potential for browser fingerprinting

   *  These issues require broader regulatory solutions.

   *  The mere existence of a record in a Verifier’s database, even
      without explicit personal identifiers, can carry privacy
      implications (e.g., a record of viewing age-restricted content)

   *  Data-Retention-Policy and Data-Sharing-Policy fields are crucial
      here.

10.  IANA Considerations

   This document has no IANA actions.

Acknowledgments

   TODO acknowledge.

Author's Address

   Alexis Hancock
   Electronic Frontier Foundation
   Email: alexis@eff.org
